% A useful relationship to keep in mind: noise_power = variance(noise) * ts
% 

% https://www.mathworks.com/matlabcentral/answers/457180-relationship-between-noise-power-in-a-band-limited-white-noise-block-vs-variance-in-a-random-number


load('y_meas')
load('u')
load('t')
ts = mean(diff(t));
use_2_parasites = 0;

% ================================
% CODE REUSE FROM find_rfb_gains.m 
% ================================

% FFT transform
[Y,Ay,f] = fft_time(y_meas, ts);

% Find fundamental frequency and harmonics
isearch = find(f > 0.05);   % ignore the zero hz peak
[~,i] = max(Ay(isearch));   % find fundamental frequency from y
i1 = isearch(i);
ff = f(i1);

% Create list of harmonic frequencies
if use_2_parasites
  mult = 0.25;
else
  mult = 0.5;
end
f_harmonics = (0: mult*ff: max(f))';


% ================================
% Estimate noise power by removing
%  the true signal (f_harmonics
% ================================
thresh = 0.05*ff;

for i = 1:length(f)
  if min( abs( f(i) - f_harmonics)) < thresh
    i_ignore(i) = true;
  else
    i_ignore(i) = false;
  end
end

Py = Ay.^2;
Pnoise = Py;
Pnoise(i_ignore) = 0;



% Estimated noise power


% estimated signal-to-noise ratios
est_power_snr = mean(Pnoise) / mean(Py);   
est_amp_snr = sqrt(est_power_snr);

est_mean_noise = est_amp_snr * mean(abs(y_meas))







































